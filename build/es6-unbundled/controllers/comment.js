const express=require("express"),Comment=require("../models/comment"),router=express.Router();router.get("/read",(req,res)=>{Comment.find((err,comments)=>{if(err)return res.json({success:!1,error:err});return res.json({success:!0,data:comments})}).limit(20)});router.post("/add",(req,res)=>{const comment=new Comment,{author,text}=req.body;if(!author||!text){return res.json({success:!1,error:"You must provide an author and comment"})}comment.author=author;comment.text=text;comment.save(err=>{if(err)return res.json({success:!1,error:err});return res.json({success:!0})})});router.put("/edit/:commentId",(req,res)=>{const{commentId}=req.params;if(!commentId){return res.json({success:!1,error:"No comment id provided"})}Comment.findById(commentId,(error,comment)=>{if(error)return res.json({success:!1,error});const{author,text}=req.body;if(author)comment.author=author;if(text)comment.text=text;comment.save(error=>{if(error)return res.json({success:!1,error});return res.json({success:!0})})})});router.delete("/delete/:commentId",(req,res)=>{const{commentId}=req.params;if(!commentId){return res.json({success:!1,error:"No comment id provided"})}Comment.remove({_id:commentId},error=>{if(error)return res.json({success:!1,error});return res.json({success:!0})})});module.exports=router;