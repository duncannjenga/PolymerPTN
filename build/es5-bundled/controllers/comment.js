var express=require('express'),Comment=require('../models/comment'),router=express.Router();router.get('/count',function(a,b){Comment.count(function(a,c){return b.json({success:!0,data:c})})}),router.get('/dummy',function(a,b){return b.json({success:!0,data:[]})}),router.get('/read',function(a,b){Comment.find(function(a,c){return a?b.json({success:!1,error:a}):b.json({success:!0,data:c})}).limit(20)}),router.post('/add',function(a,b){var c=new Comment,d=a.body,e=d.author,f=d.text;return e&&f?void(c.author=e,c.text=f,c.save(function(a){return a?b.json({success:!1,error:a}):b.json({success:!0})})):b.json({success:!1,error:'You must provide an author and comment'})}),router.put('/edit/:commentId',function(a,b){var c=a.params.commentId;return c?void Comment.findById(c,function(c,d){if(c)return b.json({success:!1,error:c});var e=a.body,f=e.author,g=e.text;f&&(d.author=f),g&&(d.text=g),d.save(function(a){return a?b.json({success:!1,error:a}):b.json({success:!0})})}):b.json({success:!1,error:'No comment id provided'})}),router.delete('/delete/:commentId',function(a,b){var c=a.params.commentId;return c?void Comment.remove({_id:c},function(a){return a?b.json({success:!1,error:a}):b.json({success:!0})}):b.json({success:!1,error:'No comment id provided'})}),module.exports=router;