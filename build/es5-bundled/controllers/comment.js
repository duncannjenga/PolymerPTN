var express=require("express"),Comment=require("../models/comment"),router=express.Router();router.get("/read",function(req,res){Comment.find(function(err,comments){if(err)return res.json({success:!1,error:err});return res.json({success:!0,data:comments})}).limit(20)});router.post("/add",function(req,res){var comment=new Comment,_req$body=req.body,author=_req$body.author,text=_req$body.text;if(!author||!text){return res.json({success:!1,error:"You must provide an author and comment"})}comment.author=author;comment.text=text;comment.save(function(err){if(err)return res.json({success:!1,error:err});return res.json({success:!0})})});router.put("/edit/:commentId",function(req,res){var commentId=req.params.commentId;if(!commentId){return res.json({success:!1,error:"No comment id provided"})}Comment.findById(commentId,function(error,comment){if(error)return res.json({success:!1,error:error});var _req$body2=req.body,author=_req$body2.author,text=_req$body2.text;if(author)comment.author=author;if(text)comment.text=text;comment.save(function(error){if(error)return res.json({success:!1,error:error});return res.json({success:!0})})})});router.delete("/delete/:commentId",function(req,res){var commentId=req.params.commentId;if(!commentId){return res.json({success:!1,error:"No comment id provided"})}Comment.remove({_id:commentId},function(error){if(error)return res.json({success:!1,error:error});return res.json({success:!0})})});module.exports=router;